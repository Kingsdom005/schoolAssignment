#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX_LEN 10
#define STU_NUM 30
#define COURSE_NUM 6
typedef struct student
{
	long num;
	char name[MAX_LEN];
	float score[COURSE_NUM];
	float sum;
	float aver;
}STU;
int Menu();
void ReadScore(STU stu[], int n, int m);
void AverSumofEveryStudent(STU stu[], int n, int m);
void AverSumofEveryCourse(STU stu[], int n, int m);
void SortbyScore(STU stu[], int n, int m);
void SwapFloat(float *x, float *y);
void SwapLong(long *x, long *y);
void SwapChar(char x[], char y[]);
void SortbyNum(STU stu[], int n, int m);
void SortbyName(STU stu[], int n, int m);
void SearchbyNum(STU stu[], int n, int m);
void SearchbyName(STU stu[], int n, int m);
void StatisticAnalysis(STU stu[], int n, int m);
void PrintScore(STU stu[], int n, int m);

void main()
{
	int ch;
	int n=0,m=0;
	STU stu[STU_NUM];
	while(1)
	{
		ch=Menu();
		switch(ch)
		{
			case 1:
				printf("Input student number(n<=%d)\n",STU_NUM);
				scanf("%d",&n);
				printf("Input course number(m<=%d)\n",COURSE_NUM);
				scanf("%d",&m);
				ReadScore(stu, n, m);
				break;
			case 2:
				AverSumofEveryCourse(stu, n, m);
				break;
			case 3:
				AverSumofEveryStudent(stu, n, m);
				break;
			case 4:
				SortbyScore(stu, n, m);
				printf("\nSort in descending order by score:\n");
				PrintScore(stu, n, m);
				break;
			case 5:
				SortbyNum(stu, n, m);
				printf("\nSort in descending order by number:\n");
				PrintScore(stu, n, m);
				break;
			case 6:
				SortbyName(stu, n, m);
				printf("\nSort in descending order by name:\n");
				PrintScore(stu, n, m);
				break;
			case 7:
				SearchbyNum(stu, n, m);
				break;
			case 8:
				SearchbyName(stu, n, m);
				break;
			case 9:
				StatisticAnalysis(stu, n, m);
				break;
			case 10:
				PrintScore(stu, n, m);
				break;
			case 0:
				printf("End of program.");
				exit(0);

			default:
				printf("Input error!");

		}
	}
}

int Menu()
{
	int itemSelected;
	printf("Management for Students' scores\n");
	printf("1.Input record\n");
	printf("2.Caculate total and average score of every course\n");
	printf("3.Caculate total and average score of every student\n");
	printf("4.Sort in descending order by total score of every student\n");
	printf("5.Sort in ascending order by number\n");
	printf("6.Sort in dictionary order by name\n");
	printf("7.Search by number\n");
	printf("8.Search by name\n");
	printf("9.Statistic analysis for every course\n");
	printf("10.List record \n");
	printf("0.Exit\n");
	printf("Please input your choice:\n");
	scanf("%d",&itemSelected);
	return itemSelected;
}

void ReadScore(STU stu[], int n, int m)
{
	int i,j;
	printf("Input student's ID,name and score:\n");
	for(i=0;i<n;i++)
	{
		scanf("%ld%s",&stu[i].num,stu[i].name);
		for(j=0;j<m;j++)
		{
			scanf("%f",&stu[i].score[j]);
		}
	}

}


void AverSumofEveryStudent(STU stu[], int n, int m)
{
	int i,j;
	for(i=0;i<n;i++)
	{
		stu[i].sum=0;
		for(j=0;j<m;j++)
		{
			stu[i].sum+=stu[i].score[j];
		}
		if(m>0)
		{
			stu[i].aver=stu[i].sum/m;
		}
		else 
			stu[i].aver=-1;
		printf("student %d: sum=%.0f, aver=%.0f\n", i+1,stu[i].sum,stu[i].aver);
	}
}



void AverSumofEveryCourse(STU stu[], int n, int m)
{
	int i,j;
	float sum[COURSE_NUM],aver[COURSE_NUM];
	for(j=0;j<m;j++)
	{
		sum[j]=0;
		for(i=0;i<n;i++)
		{
			sum[j]+=stu[i].score[j];
		}
		aver[j]=n>0?sum[j]/n:-1;
		printf("course %d: sum=%.0f,aver=%.f\n",j+1,sum[j],aver[j]);
	}
	

}

void SortbyScore(STU stu[], int n, int m)
{
	int i,j,k,t;
	for(i=0;i<n-1;i++)
	{
		k=i;
		for(j=i+1;j<n;j++)
		{
			if(stu[j].sum>stu[k].sum)
			k=j;
		}
	
		if(k!=i)
		{
			for(t=0;t<m;t++)
			{
				SwapFloat(&stu[k].score[t],&stu[i].score[t]);
			}
			SwapFloat(&stu[k].sum,&stu[i].sum);
			SwapFloat(&stu[k].aver,&stu[i].aver);
			SwapLong(&stu[k].num,&stu[i].num);
			SwapChar(stu[k].name,stu[i].name);
		}
	}
}

void SwapFloat(float *x, float *y)
{
	float temp;
	temp=*x;
	*x=*y;
	*y=temp;
}

void SwapLong(long *x, long *y)
{
	long temp;
	temp=*x;
	*x=*y;
	*y=temp;
}

void SwapChar(char x[], char y[])
{
	char temp[MAX_LEN];
	strcpy(temp,x);
	strcpy(x,y);
	strcpy(y,temp);
}

void SortbyNum(STU stu[], int n, int m)
{
	int i,j,k,t;
	for(i=0;i<n-1;i++)
	{
		k=i;
		for(j=i+1;j<n;j++)
		{
			if(stu[j].num>stu[k].num)
			k=j;
		}
	
		if(k!=i)
		{
			for(t=0;t<m;t++)
			{
				SwapFloat(&stu[k].score[t],&stu[i].score[t]);
			}
			SwapFloat(&stu[k].sum,&stu[i].sum);
			SwapFloat(&stu[k].aver,&stu[i].aver);
			SwapLong(&stu[k].num,&stu[i].num);
			SwapChar(stu[k].name,stu[i].name);
		}
	}
}

void SortbyName(STU stu[], int n, int m)
{
	int i,j,t;
	for(i=0;i<n-1;i++)
	{
		for(j=i+1;j<n;j++)
		{
			if(strcmp(stu[j].name,stu[i].name)<0)
			{
				for(t=0;t<m;t++)
				{
					SwapFloat(&stu[i].score[t],&stu[j].score[t]);
				}
				SwapFloat(&stu[i].sum,&stu[j].sum);
				SwapFloat(&stu[i].aver,&stu[j].aver);
				SwapLong(&stu[i].num,&stu[j].num);
				SwapChar(stu[i].name,stu[j].name);
			}
		}
	}
}

void SearchbyNum(STU stu[], int n, int m)
{
	long number;
	int i,j;
	printf("Input the number you want to search:\n");
	scanf("%d",&number);
	for(i=0;i<n;i++)
	{
		if(stu[i].num==number)
		{
			printf("%ld\t%s\t",stu[i].num,stu[i].name);
			for(j=0;j<m;j++)
			{
				printf("%.0f\t",stu[i].score[j]);
			}
			printf("%.0f\t%.0f\t\n",stu[i].sum,stu[i].aver);
			break;
		}
	}	
	if(i==n)
		printf("\nNot found!\n");

}

void SearchbyName(STU stu[], int n, int m)
{
	char name[MAX_LEN];
	int i,j;
	printf("Input the name you want to search:\n");
	scanf("%s",name);
	for(i=0;i<n;i++)
	{
		if(strcmp(stu[i].name,name)==0)
		{
			printf("%ld\t%s\t",stu[i].num,stu[i].name);
			for(j=0;j<m;j++)
			{
				printf("%.0f\t",stu[i].score[j]);
			}
			printf("%.0f\t%.0f\t\n",stu[i].sum,stu[i].aver);
			break;
		}
	}	
	if(i==n)
		printf("\nNot found!\n");
}

void StatisticAnalysis(STU stu[], int n, int m)
{
	int i,j,t[6];
	for(j=0;j<m;j++)
	{
		printf("For course %d:\n",j+1);
		memset(t,0,sizeof(t));
		for(i=0;i<n;i++)
		{
			if(stu[i].score[j]>=0 && stu[i].score[j]<60)
				t[0]++;
			else if(stu[i].score[j]<70)
				t[1]++;
			else if(stu[i].score[j]<80)
				t[2]++;
			else if(stu[i].score[j]<90)
				t[3]++;
			else if(stu[i].score[j]<100)
				t[4]++;
			else if(stu[i].score[j]==100)
				t[5]++;
			else
				printf("Score Error!");
		}
	    /*	for(total=0,i=0;i<=5;i++)
		{
			total=total + t[i];
		}*/
		for(i=0;i<=5;i++)
		{
			if(i==0)
				printf("<60\t%d\t%.2f%%\n",t[i],(float)t[i]/n*100);
			else if(i==5)
				printf("%d\t%d\t%.2f%%\n",(i+5)*10,t[i],(float)t[i]/n*100);
			else 
				printf("%d-%d\t%d\t%.2f%%\n",(i+5)*10,(i+5)*10+9,t[i],(float)t[i]/n*100);
		}
	}
}

void PrintScore(STU stu[], int n, int m)
{
	int i,j;
	for(i=0;i<n;i++)
	{
		printf("%ld\t%s\t",stu[i].num,stu[i].name);
		for(j=0;j<m;j++)
		{
			printf("%.f\t",stu[i].score[j]);
		}
		printf("%.f\t%.f\n",stu[i].sum,stu[i].aver);
	}
}



